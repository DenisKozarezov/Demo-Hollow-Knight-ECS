//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FalseKnightAttackEventListenerComponent falseKnightAttackEventListener { get { return (FalseKnightAttackEventListenerComponent)GetComponent(GameComponentsLookup.FalseKnightAttackEventListener); } }
    public bool hasFalseKnightAttackEventListener { get { return HasComponent(GameComponentsLookup.FalseKnightAttackEventListener); } }

    public void AddFalseKnightAttackEventListener(System.Collections.Generic.List<IFalseKnightAttackEventListener> newValue) {
        var index = GameComponentsLookup.FalseKnightAttackEventListener;
        var component = (FalseKnightAttackEventListenerComponent)CreateComponent(index, typeof(FalseKnightAttackEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFalseKnightAttackEventListener(System.Collections.Generic.List<IFalseKnightAttackEventListener> newValue) {
        var index = GameComponentsLookup.FalseKnightAttackEventListener;
        var component = (FalseKnightAttackEventListenerComponent)CreateComponent(index, typeof(FalseKnightAttackEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFalseKnightAttackEventListener() {
        RemoveComponent(GameComponentsLookup.FalseKnightAttackEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFalseKnightAttackEventListener;

    public static Entitas.IMatcher<GameEntity> FalseKnightAttackEventListener {
        get {
            if (_matcherFalseKnightAttackEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FalseKnightAttackEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFalseKnightAttackEventListener = matcher;
            }

            return _matcherFalseKnightAttackEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFalseKnightAttackEventListener(IFalseKnightAttackEventListener value) {
        var listeners = hasFalseKnightAttackEventListener
            ? falseKnightAttackEventListener.value
            : new System.Collections.Generic.List<IFalseKnightAttackEventListener>();
        listeners.Add(value);
        ReplaceFalseKnightAttackEventListener(listeners);
    }

    public void RemoveFalseKnightAttackEventListener(IFalseKnightAttackEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = falseKnightAttackEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFalseKnightAttackEventListener();
        } else {
            ReplaceFalseKnightAttackEventListener(listeners);
        }
    }
}
