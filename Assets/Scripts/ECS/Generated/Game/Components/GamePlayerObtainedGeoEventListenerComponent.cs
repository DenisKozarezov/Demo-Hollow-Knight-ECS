//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerObtainedGeoEventListenerComponent playerObtainedGeoEventListener { get { return (PlayerObtainedGeoEventListenerComponent)GetComponent(GameComponentsLookup.PlayerObtainedGeoEventListener); } }
    public bool hasPlayerObtainedGeoEventListener { get { return HasComponent(GameComponentsLookup.PlayerObtainedGeoEventListener); } }

    public void AddPlayerObtainedGeoEventListener(System.Collections.Generic.List<IPlayerObtainedGeoEventListener> newValue) {
        var index = GameComponentsLookup.PlayerObtainedGeoEventListener;
        var component = (PlayerObtainedGeoEventListenerComponent)CreateComponent(index, typeof(PlayerObtainedGeoEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerObtainedGeoEventListener(System.Collections.Generic.List<IPlayerObtainedGeoEventListener> newValue) {
        var index = GameComponentsLookup.PlayerObtainedGeoEventListener;
        var component = (PlayerObtainedGeoEventListenerComponent)CreateComponent(index, typeof(PlayerObtainedGeoEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerObtainedGeoEventListener() {
        RemoveComponent(GameComponentsLookup.PlayerObtainedGeoEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerObtainedGeoEventListener;

    public static Entitas.IMatcher<GameEntity> PlayerObtainedGeoEventListener {
        get {
            if (_matcherPlayerObtainedGeoEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerObtainedGeoEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerObtainedGeoEventListener = matcher;
            }

            return _matcherPlayerObtainedGeoEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddPlayerObtainedGeoEventListener(IPlayerObtainedGeoEventListener value) {
        var listeners = hasPlayerObtainedGeoEventListener
            ? playerObtainedGeoEventListener.value
            : new System.Collections.Generic.List<IPlayerObtainedGeoEventListener>();
        listeners.Add(value);
        ReplacePlayerObtainedGeoEventListener(listeners);
    }

    public void RemovePlayerObtainedGeoEventListener(IPlayerObtainedGeoEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = playerObtainedGeoEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePlayerObtainedGeoEventListener();
        } else {
            ReplacePlayerObtainedGeoEventListener(listeners);
        }
    }
}
