//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity collidingViewRegisterEntity { get { return GetGroup(GameMatcher.CollidingViewRegister).GetSingleEntity(); } }
    public Core.ECS.Components.CollidingViewRegister collidingViewRegister { get { return collidingViewRegisterEntity.collidingViewRegister; } }
    public bool hasCollidingViewRegister { get { return collidingViewRegisterEntity != null; } }

    public GameEntity SetCollidingViewRegister(IRegisterService<IViewController> newValue) {
        if (hasCollidingViewRegister) {
            throw new Entitas.EntitasException("Could not set CollidingViewRegister!\n" + this + " already has an entity with Core.ECS.Components.CollidingViewRegister!",
                "You should check if the context already has a collidingViewRegisterEntity before setting it or use context.ReplaceCollidingViewRegister().");
        }
        var entity = CreateEntity();
        entity.AddCollidingViewRegister(newValue);
        return entity;
    }

    public void ReplaceCollidingViewRegister(IRegisterService<IViewController> newValue) {
        var entity = collidingViewRegisterEntity;
        if (entity == null) {
            entity = SetCollidingViewRegister(newValue);
        } else {
            entity.ReplaceCollidingViewRegister(newValue);
        }
    }

    public void RemoveCollidingViewRegister() {
        collidingViewRegisterEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.ECS.Components.CollidingViewRegister collidingViewRegister { get { return (Core.ECS.Components.CollidingViewRegister)GetComponent(GameComponentsLookup.CollidingViewRegister); } }
    public bool hasCollidingViewRegister { get { return HasComponent(GameComponentsLookup.CollidingViewRegister); } }

    public void AddCollidingViewRegister(IRegisterService<IViewController> newValue) {
        var index = GameComponentsLookup.CollidingViewRegister;
        var component = (Core.ECS.Components.CollidingViewRegister)CreateComponent(index, typeof(Core.ECS.Components.CollidingViewRegister));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCollidingViewRegister(IRegisterService<IViewController> newValue) {
        var index = GameComponentsLookup.CollidingViewRegister;
        var component = (Core.ECS.Components.CollidingViewRegister)CreateComponent(index, typeof(Core.ECS.Components.CollidingViewRegister));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCollidingViewRegister() {
        RemoveComponent(GameComponentsLookup.CollidingViewRegister);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCollidingViewRegister;

    public static Entitas.IMatcher<GameEntity> CollidingViewRegister {
        get {
            if (_matcherCollidingViewRegister == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CollidingViewRegister);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCollidingViewRegister = matcher;
            }

            return _matcherCollidingViewRegister;
        }
    }
}
