//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity loggerEntity { get { return GetGroup(GameMatcher.Logger).GetSingleEntity(); } }
    public Core.ECS.Components.Logger logger { get { return loggerEntity.logger; } }
    public bool hasLogger { get { return loggerEntity != null; } }

    public GameEntity SetLogger(Core.Services.ILogService newValue) {
        if (hasLogger) {
            throw new Entitas.EntitasException("Could not set Logger!\n" + this + " already has an entity with Core.ECS.Components.Logger!",
                "You should check if the context already has a loggerEntity before setting it or use context.ReplaceLogger().");
        }
        var entity = CreateEntity();
        entity.AddLogger(newValue);
        return entity;
    }

    public void ReplaceLogger(Core.Services.ILogService newValue) {
        var entity = loggerEntity;
        if (entity == null) {
            entity = SetLogger(newValue);
        } else {
            entity.ReplaceLogger(newValue);
        }
    }

    public void RemoveLogger() {
        loggerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.ECS.Components.Logger logger { get { return (Core.ECS.Components.Logger)GetComponent(GameComponentsLookup.Logger); } }
    public bool hasLogger { get { return HasComponent(GameComponentsLookup.Logger); } }

    public void AddLogger(Core.Services.ILogService newValue) {
        var index = GameComponentsLookup.Logger;
        var component = (Core.ECS.Components.Logger)CreateComponent(index, typeof(Core.ECS.Components.Logger));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLogger(Core.Services.ILogService newValue) {
        var index = GameComponentsLookup.Logger;
        var component = (Core.ECS.Components.Logger)CreateComponent(index, typeof(Core.ECS.Components.Logger));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLogger() {
        RemoveComponent(GameComponentsLookup.Logger);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLogger;

    public static Entitas.IMatcher<GameEntity> Logger {
        get {
            if (_matcherLogger == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Logger);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLogger = matcher;
            }

            return _matcherLogger;
        }
    }
}
