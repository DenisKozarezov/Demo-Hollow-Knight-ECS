//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.ECS.Events.InteractableTriggerEnterEvent interactableTriggerEnterEvent { get { return (Core.ECS.Events.InteractableTriggerEnterEvent)GetComponent(GameComponentsLookup.InteractableTriggerEnterEvent); } }
    public bool hasInteractableTriggerEnterEvent { get { return HasComponent(GameComponentsLookup.InteractableTriggerEnterEvent); } }

    public void AddInteractableTriggerEnterEvent(UnityEngine.Vector2 newPosition, Leopotam.Ecs.EcsEntity newInteractableEntity, Core.ECS.Components.InteractableComponent newInteractableComponent) {
        var index = GameComponentsLookup.InteractableTriggerEnterEvent;
        var component = (Core.ECS.Events.InteractableTriggerEnterEvent)CreateComponent(index, typeof(Core.ECS.Events.InteractableTriggerEnterEvent));
        component.Position = newPosition;
        component.InteractableEntity = newInteractableEntity;
        component.InteractableComponent = newInteractableComponent;
        AddComponent(index, component);
    }

    public void ReplaceInteractableTriggerEnterEvent(UnityEngine.Vector2 newPosition, Leopotam.Ecs.EcsEntity newInteractableEntity, Core.ECS.Components.InteractableComponent newInteractableComponent) {
        var index = GameComponentsLookup.InteractableTriggerEnterEvent;
        var component = (Core.ECS.Events.InteractableTriggerEnterEvent)CreateComponent(index, typeof(Core.ECS.Events.InteractableTriggerEnterEvent));
        component.Position = newPosition;
        component.InteractableEntity = newInteractableEntity;
        component.InteractableComponent = newInteractableComponent;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractableTriggerEnterEvent() {
        RemoveComponent(GameComponentsLookup.InteractableTriggerEnterEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractableTriggerEnterEvent;

    public static Entitas.IMatcher<GameEntity> InteractableTriggerEnterEvent {
        get {
            if (_matcherInteractableTriggerEnterEvent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractableTriggerEnterEvent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractableTriggerEnterEvent = matcher;
            }

            return _matcherInteractableTriggerEnterEvent;
        }
    }
}
