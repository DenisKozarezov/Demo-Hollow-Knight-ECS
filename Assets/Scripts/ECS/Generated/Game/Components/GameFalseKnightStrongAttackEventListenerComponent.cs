//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FalseKnightStrongAttackEventListenerComponent falseKnightStrongAttackEventListener { get { return (FalseKnightStrongAttackEventListenerComponent)GetComponent(GameComponentsLookup.FalseKnightStrongAttackEventListener); } }
    public bool hasFalseKnightStrongAttackEventListener { get { return HasComponent(GameComponentsLookup.FalseKnightStrongAttackEventListener); } }

    public void AddFalseKnightStrongAttackEventListener(System.Collections.Generic.List<IFalseKnightStrongAttackEventListener> newValue) {
        var index = GameComponentsLookup.FalseKnightStrongAttackEventListener;
        var component = (FalseKnightStrongAttackEventListenerComponent)CreateComponent(index, typeof(FalseKnightStrongAttackEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFalseKnightStrongAttackEventListener(System.Collections.Generic.List<IFalseKnightStrongAttackEventListener> newValue) {
        var index = GameComponentsLookup.FalseKnightStrongAttackEventListener;
        var component = (FalseKnightStrongAttackEventListenerComponent)CreateComponent(index, typeof(FalseKnightStrongAttackEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFalseKnightStrongAttackEventListener() {
        RemoveComponent(GameComponentsLookup.FalseKnightStrongAttackEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFalseKnightStrongAttackEventListener;

    public static Entitas.IMatcher<GameEntity> FalseKnightStrongAttackEventListener {
        get {
            if (_matcherFalseKnightStrongAttackEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FalseKnightStrongAttackEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFalseKnightStrongAttackEventListener = matcher;
            }

            return _matcherFalseKnightStrongAttackEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFalseKnightStrongAttackEventListener(IFalseKnightStrongAttackEventListener value) {
        var listeners = hasFalseKnightStrongAttackEventListener
            ? falseKnightStrongAttackEventListener.value
            : new System.Collections.Generic.List<IFalseKnightStrongAttackEventListener>();
        listeners.Add(value);
        ReplaceFalseKnightStrongAttackEventListener(listeners);
    }

    public void RemoveFalseKnightStrongAttackEventListener(IFalseKnightStrongAttackEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = falseKnightStrongAttackEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFalseKnightStrongAttackEventListener();
        } else {
            ReplaceFalseKnightStrongAttackEventListener(listeners);
        }
    }
}
